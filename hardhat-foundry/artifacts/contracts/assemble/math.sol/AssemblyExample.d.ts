// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface AssemblyExample$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "AssemblyExample",
  "sourceName": "contracts/assemble/math.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "add",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "divide",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "multiply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "subtract",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052348015600f57600080fd5b506102f48061001f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063165c4a16146100515780633ef5e44514610081578063771602f7146100b1578063f88e9fbf146100e1575b600080fd5b61006b600480360381019061006691906101d7565b610111565b6040516100789190610226565b60405180910390f35b61009b600480360381019061009691906101d7565b610123565b6040516100a89190610226565b60405180910390f35b6100cb60048036038101906100c691906101d7565b610135565b6040516100d89190610226565b60405180910390f35b6100fb60048036038101906100f691906101d7565b610147565b6040516101089190610226565b60405180910390f35b60008082840290508091505092915050565b60008082840390508091505092915050565b60008082840190508091505092915050565b600080821161018b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101829061029e565b60405180910390fd5b600082840490508091505092915050565b600080fd5b6000819050919050565b6101b4816101a1565b81146101bf57600080fd5b50565b6000813590506101d1816101ab565b92915050565b600080604083850312156101ee576101ed61019c565b5b60006101fc858286016101c2565b925050602061020d858286016101c2565b9150509250929050565b610220816101a1565b82525050565b600060208201905061023b6000830184610217565b92915050565b600082825260208201905092915050565b7f4469766973696f6e206279207a65726f00000000000000000000000000000000600082015250565b6000610288601083610241565b915061029382610252565b602082019050919050565b600060208201905081810360008301526102b78161027b565b905091905056fea26469706673582212204a9af1a5933352202dffccba390566572f396d8f6234ade8368e64e80058570e64736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063165c4a16146100515780633ef5e44514610081578063771602f7146100b1578063f88e9fbf146100e1575b600080fd5b61006b600480360381019061006691906101d7565b610111565b6040516100789190610226565b60405180910390f35b61009b600480360381019061009691906101d7565b610123565b6040516100a89190610226565b60405180910390f35b6100cb60048036038101906100c691906101d7565b610135565b6040516100d89190610226565b60405180910390f35b6100fb60048036038101906100f691906101d7565b610147565b6040516101089190610226565b60405180910390f35b60008082840290508091505092915050565b60008082840390508091505092915050565b60008082840190508091505092915050565b600080821161018b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101829061029e565b60405180910390fd5b600082840490508091505092915050565b600080fd5b6000819050919050565b6101b4816101a1565b81146101bf57600080fd5b50565b6000813590506101d1816101ab565b92915050565b600080604083850312156101ee576101ed61019c565b5b60006101fc858286016101c2565b925050602061020d858286016101c2565b9150509250929050565b610220816101a1565b82525050565b600060208201905061023b6000830184610217565b92915050565b600082825260208201905092915050565b7f4469766973696f6e206279207a65726f00000000000000000000000000000000600082015250565b6000610288601083610241565b915061029382610252565b602082019050919050565b600060208201905081810360008301526102b78161027b565b905091905056fea26469706673582212204a9af1a5933352202dffccba390566572f396d8f6234ade8368e64e80058570e64736f6c634300081c0033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "contracts/assemble/math.sol:AssemblyExample",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<AssemblyExample$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "contracts/assemble/math.sol:AssemblyExample",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<AssemblyExample$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "contracts/assemble/math.sol:AssemblyExample",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<AssemblyExample$Type["abi"]>>;
}
